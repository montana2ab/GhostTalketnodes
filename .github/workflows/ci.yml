name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Test Go server
  test-server:
    name: Test Go Server
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      working-directory: ./server
      run: go mod download
      
    - name: Run tests
      working-directory: ./server
      run: go test -v -race -coverprofile=coverage.out ./...
      
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./server/coverage.out
        flags: server
        
  # Build server
  build-server:
    name: Build Go Server
    runs-on: ubuntu-latest
    needs: test-server
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Build binary
      working-directory: ./server
      run: make build
      
    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: ghostnodes-binary
        path: server/bin/ghostnodes
        
  # Build Docker image
  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-server
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      working-directory: ./server
      run: docker build -t ghostnodes:${{ github.sha }} .
      
    - name: Save Docker image
      run: docker save ghostnodes:${{ github.sha }} | gzip > ghostnodes.tar.gz
      
    - name: Upload Docker image
      uses: actions/upload-artifact@v3
      with:
        name: ghostnodes-docker
        path: ghostnodes.tar.gz
        
  # Lint Go code
  lint-server:
    name: Lint Go Server
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: server
        args: --timeout=5m
        
  # Security scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: './server'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
